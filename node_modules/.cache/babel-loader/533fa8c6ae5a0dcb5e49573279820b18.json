{"ast":null,"code":"import * as api from '../api/index.js';\nimport { FETCH_ALL, DELETE, UPDATE, LIKE, CREATE, FETCH_BY_SEARCH } from '../constans/actionType.js';\n// Action  Creater\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","DELETE","UPDATE","LIKE","CREATE","FETCH_BY_SEARCH","getPosts","page","dispatch","data","currentPage","numberOfPages","fetchPosts","console","log","type","payload","error","getPostBySearch","searchQuery","fetchPostsBySearch","createPost","post","message","updatePost","id","deletePost","likePost"],"sources":["/home/nishant/travel_app/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api/index.js';\nimport { FETCH_ALL,DELETE,UPDATE,LIKE ,CREATE,FETCH_BY_SEARCH} from '../constans/actionType.js';\n// Action  Creater\nexport const getPosts =  (page)  => async(dispatch)=>{\n    try {\n       const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\n        console.log(data)\n        dispatch({type:FETCH_ALL,payload:data})\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getPostBySearch = (searchQuery)  => async(dispatch)=>{\n    try {\n        const {data:{data}} = await api.fetchPostsBySearch(searchQuery);\n        dispatch({type:FETCH_BY_SEARCH,payload:data})\n    } catch (error) {\n        console.log(error)\n    }\n\n}\n\nexport const createPost = (post) => async(dispatch) =>{\n    try {\n        const { data } = await api.createPost(post);\n        dispatch({type:CREATE,payload :data})\n    } catch (error) {\n        console.log(error.message)\n    }\n}\n\nexport const updatePost = (id,post) => async(dispatch) =>{\n    try {\n        const {data} = await api.updatePost(id,post)\n        dispatch({type:UPDATE,payload :data})\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const deletePost = (id) =>async(dispatch) =>{\n    try {\n        await api.deletePost(id)\n        dispatch({type:DELETE,payload:id})\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const likePost = (id) =>async(dispatch) =>{\n    try {\n        const {data} = await api.likePost(id)\n        dispatch({type:LIKE,payload:data})\n    } catch (error) {\n        console.log(error);\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AACtC,SAASC,SAAS,EAACC,MAAM,EAACC,MAAM,EAACC,IAAI,EAAEC,MAAM,EAACC,eAAe,QAAO,2BAA2B;AAC/F;AACA,OAAO,MAAMC,QAAQ,GAAKC,IAAI,IAAM,MAAMC,QAAQ,IAAG;EACjD,IAAI;IACD,MAAM;MAAEC,IAAI,EAAE;QAAEA,IAAI;QAAEC,WAAW;QAAEC;MAAc;IAAE,CAAC,GAAG,MAAMZ,GAAG,CAACa,UAAU,CAACL,IAAI,CAAC;IAChFM,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjBD,QAAQ,CAAC;MAACO,IAAI,EAACf,SAAS;MAACgB,OAAO,EAACP;IAAI,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,WAAW,IAAM,MAAMX,QAAQ,IAAG;EAC9D,IAAI;IACA,MAAM;MAACC,IAAI,EAAC;QAACA;MAAI;IAAC,CAAC,GAAG,MAAMV,GAAG,CAACqB,kBAAkB,CAACD,WAAW,CAAC;IAC/DX,QAAQ,CAAC;MAACO,IAAI,EAACV,eAAe;MAACW,OAAO,EAACP;IAAI,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACtB;AAEJ,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,IAAI,IAAK,MAAMd,QAAQ,IAAI;EAClD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACsB,UAAU,CAACC,IAAI,CAAC;IAC3Cd,QAAQ,CAAC;MAACO,IAAI,EAACX,MAAM;MAACY,OAAO,EAAEP;IAAI,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAACM,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,CAACC,EAAE,EAACH,IAAI,KAAK,MAAMd,QAAQ,IAAI;EACrD,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMV,GAAG,CAACyB,UAAU,CAACC,EAAE,EAACH,IAAI,CAAC;IAC5Cd,QAAQ,CAAC;MAACO,IAAI,EAACb,MAAM;MAACc,OAAO,EAAEP;IAAI,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMS,UAAU,GAAID,EAAE,IAAI,MAAMjB,QAAQ,IAAI;EAC/C,IAAI;IACA,MAAMT,GAAG,CAAC2B,UAAU,CAACD,EAAE,CAAC;IACxBjB,QAAQ,CAAC;MAACO,IAAI,EAACd,MAAM;MAACe,OAAO,EAACS;IAAE,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMU,QAAQ,GAAIF,EAAE,IAAI,MAAMjB,QAAQ,IAAI;EAC7C,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMV,GAAG,CAAC4B,QAAQ,CAACF,EAAE,CAAC;IACrCjB,QAAQ,CAAC;MAACO,IAAI,EAACZ,IAAI;MAACa,OAAO,EAACP;IAAI,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}