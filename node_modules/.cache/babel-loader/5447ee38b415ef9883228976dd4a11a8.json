{"ast":null,"code":"import * as api from '../api/index.js';\nimport { FETCH_ALL, DELETE, UPDATE, LIKE, START_LOADING, STOP_LOADING, CREATE, FETCH_BY_SEARCH } from '../constans/actionType.js';\n// Action  Creater\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: STOP_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: STOP_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: STOP_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: STOP_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","DELETE","UPDATE","LIKE","START_LOADING","STOP_LOADING","CREATE","FETCH_BY_SEARCH","getPost","id","dispatch","type","data","fetchPost","console","log","payload","error","getPosts","page","fetchPosts","getPostBySearch","searchQuery","fetchPostsBySearch","createPost","post","message","updatePost","deletePost","likePost"],"sources":["/home/nishant/travel_app/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api/index.js';\nimport { FETCH_ALL,DELETE,UPDATE,LIKE ,START_LOADING,STOP_LOADING,CREATE,FETCH_BY_SEARCH} from '../constans/actionType.js';\n// Action  Creater\nexport const getPost =  (id)  => async(dispatch)=>{\n    try {\n        dispatch({type:START_LOADING})\n        const { data } = await api.fetchPost(id);\n        console.log(data)\n        dispatch({type:FETCH_ALL,payload:data})\n        dispatch({type:STOP_LOADING})\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const getPosts =  (page)  => async(dispatch)=>{\n    try {\n        dispatch({type:START_LOADING})\n        const { data } = await api.fetchPosts(page);\n        console.log(data)\n        dispatch({type:FETCH_ALL,payload:data})\n        dispatch({type:STOP_LOADING})\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getPostBySearch = (searchQuery)  => async(dispatch)=>{\n    try {\n        dispatch({type:START_LOADING})\n        \n        const {data:{data}} = await api.fetchPostsBySearch(searchQuery);\n        dispatch({type:FETCH_BY_SEARCH,payload:data})\n        dispatch({type:STOP_LOADING})\n\n    } catch (error) {\n        console.log(error)\n    }\n\n}\n\nexport const createPost = (post) => async(dispatch) =>{\n    try {\n        dispatch({type:START_LOADING})\n        const { data } = await api.createPost(post);\n        dispatch({type:CREATE,payload :data})\n        dispatch({type:STOP_LOADING})\n    } catch (error) {\n        console.log(error.message)\n    }\n}\n\nexport const updatePost = (id,post) => async(dispatch) =>{\n    try {\n        const {data} = await api.updatePost(id,post)\n        dispatch({type:UPDATE,payload :data})\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const deletePost = (id) =>async(dispatch) =>{\n    try {\n        await api.deletePost(id)\n        dispatch({type:DELETE,payload:id})\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const likePost = (id) =>async(dispatch) =>{\n    try {\n        const {data} = await api.likePost(id)\n        dispatch({type:LIKE,payload:data})\n    } catch (error) {\n        console.log(error);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}